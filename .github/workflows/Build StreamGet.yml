name: Build StreamGet

permissions:
  contents: write

on:
  push:
    tags:
      - v_cli.*
  workflow_dispatch:

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: 获取版本号
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION=$(date -u +%Y%m%d%H%M%S)
          else
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=${VERSION/v_cli./}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: 为 workflow_dispatch 创建标签
        if: github.event_name == 'workflow_dispatch'
        run: |
          git tag v_cli.${{ steps.get_version.outputs.version }}
          git push origin v_cli.${{ steps.get_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    needs: create_release
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build executable
        run: |
          python build.py --path cli.py
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v_cli.${{ needs.create_release.outputs.version }}
          name: StreamGet CLI ${{ needs.create_release.outputs.version }}
          files: dist/streamget.exe
          draft: false
          prerelease: false

  build-linux:
    needs: create_release
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build executable
        run: |
          python build.py --path cli.py
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v_cli.${{ needs.create_release.outputs.version }}
          name: StreamGet CLI ${{ needs.create_release.outputs.version }}
          files: dist/streamget
          draft: false
          prerelease: false
